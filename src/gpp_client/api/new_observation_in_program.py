# Generated by ariadne-codegen
# Source: src/queries

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    CalculationState,
    CalibrationRole,
    CloudExtinctionPreset,
    EditType,
    Existence,
    GmosNorthBuiltinFpu,
    GmosNorthFilter,
    GmosNorthGrating,
    GmosSouthBuiltinFpu,
    GmosSouthFilter,
    GmosSouthGrating,
    ImageQualityPreset,
    Instrument,
    ObservingModeType,
    ScienceBand,
    ScienceMode,
    SkyBackground,
    TimingWindowInclusion,
    WaterVapor,
)


class NewObservationInProgram(BaseModel):
    observation_edit: "NewObservationInProgramObservationEdit" = Field(
        alias="observationEdit"
    )


class NewObservationInProgramObservationEdit(BaseModel):
    edit_type: EditType = Field(alias="editType")
    observation_id: Any = Field(alias="observationId")
    value: Optional["NewObservationInProgramObservationEditValue"]


class NewObservationInProgramObservationEditValue(BaseModel):
    id: Any
    existence: Existence
    reference: Optional["NewObservationInProgramObservationEditValueReference"]
    calibration_role: Optional[CalibrationRole] = Field(alias="calibrationRole")
    instrument: Optional[Instrument]
    index: Any
    title: Any
    subtitle: Optional[Any]
    science_requirements: (
        "NewObservationInProgramObservationEditValueScienceRequirements"
    ) = Field(alias="scienceRequirements")
    science_band: Optional[ScienceBand] = Field(alias="scienceBand")
    workflow: Optional["NewObservationInProgramObservationEditValueWorkflow"]
    observing_mode: Optional[
        "NewObservationInProgramObservationEditValueObservingMode"
    ] = Field(alias="observingMode")
    constraint_set: "NewObservationInProgramObservationEditValueConstraintSet" = Field(
        alias="constraintSet"
    )
    timing_windows: List["NewObservationInProgramObservationEditValueTimingWindows"] = (
        Field(alias="timingWindows")
    )
    target_environment: (
        "NewObservationInProgramObservationEditValueTargetEnvironment"
    ) = Field(alias="targetEnvironment")


class NewObservationInProgramObservationEditValueReference(BaseModel):
    label: Any


class NewObservationInProgramObservationEditValueScienceRequirements(BaseModel):
    mode: Optional[ScienceMode]


class NewObservationInProgramObservationEditValueWorkflow(BaseModel):
    state: CalculationState


class NewObservationInProgramObservationEditValueObservingMode(BaseModel):
    instrument: Instrument
    mode: ObservingModeType
    gmos_north_long_slit: Optional[
        "NewObservationInProgramObservationEditValueObservingModeGmosNorthLongSlit"
    ] = Field(alias="gmosNorthLongSlit")
    gmos_south_long_slit: Optional[
        "NewObservationInProgramObservationEditValueObservingModeGmosSouthLongSlit"
    ] = Field(alias="gmosSouthLongSlit")


class NewObservationInProgramObservationEditValueObservingModeGmosNorthLongSlit(
    BaseModel
):
    grating: GmosNorthGrating
    filter: Optional[GmosNorthFilter]
    fpu: GmosNorthBuiltinFpu
    central_wavelength: (
        "NewObservationInProgramObservationEditValueObservingModeGmosNorthLongSlitCentralWavelength"
    ) = Field(alias="centralWavelength")
    spatial_offsets: List[
        "NewObservationInProgramObservationEditValueObservingModeGmosNorthLongSlitSpatialOffsets"
    ] = Field(alias="spatialOffsets")


class NewObservationInProgramObservationEditValueObservingModeGmosNorthLongSlitCentralWavelength(
    BaseModel
):
    nanometers: Any


class NewObservationInProgramObservationEditValueObservingModeGmosNorthLongSlitSpatialOffsets(
    BaseModel
):
    arcseconds: Any


class NewObservationInProgramObservationEditValueObservingModeGmosSouthLongSlit(
    BaseModel
):
    grating: GmosSouthGrating
    filter: Optional[GmosSouthFilter]
    fpu: GmosSouthBuiltinFpu
    central_wavelength: (
        "NewObservationInProgramObservationEditValueObservingModeGmosSouthLongSlitCentralWavelength"
    ) = Field(alias="centralWavelength")
    spatial_offsets: List[
        "NewObservationInProgramObservationEditValueObservingModeGmosSouthLongSlitSpatialOffsets"
    ] = Field(alias="spatialOffsets")


class NewObservationInProgramObservationEditValueObservingModeGmosSouthLongSlitCentralWavelength(
    BaseModel
):
    nanometers: Any


class NewObservationInProgramObservationEditValueObservingModeGmosSouthLongSlitSpatialOffsets(
    BaseModel
):
    arcseconds: Any


class NewObservationInProgramObservationEditValueConstraintSet(BaseModel):
    image_quality: ImageQualityPreset = Field(alias="imageQuality")
    cloud_extinction: CloudExtinctionPreset = Field(alias="cloudExtinction")
    sky_background: SkyBackground = Field(alias="skyBackground")
    water_vapor: WaterVapor = Field(alias="waterVapor")
    elevation_range: (
        "NewObservationInProgramObservationEditValueConstraintSetElevationRange"
    ) = Field(alias="elevationRange")


class NewObservationInProgramObservationEditValueConstraintSetElevationRange(BaseModel):
    air_mass: Optional[
        "NewObservationInProgramObservationEditValueConstraintSetElevationRangeAirMass"
    ] = Field(alias="airMass")
    hour_angle: Optional[
        "NewObservationInProgramObservationEditValueConstraintSetElevationRangeHourAngle"
    ] = Field(alias="hourAngle")


class NewObservationInProgramObservationEditValueConstraintSetElevationRangeAirMass(
    BaseModel
):
    min: Any
    max: Any


class NewObservationInProgramObservationEditValueConstraintSetElevationRangeHourAngle(
    BaseModel
):
    min_hours: Any = Field(alias="minHours")
    max_hours: Any = Field(alias="maxHours")


class NewObservationInProgramObservationEditValueTimingWindows(BaseModel):
    inclusion: TimingWindowInclusion
    start_utc: Any = Field(alias="startUtc")
    end: Optional[
        Annotated[
            Union[
                "NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAt",
                "NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAfter",
            ],
            Field(discriminator="typename__"),
        ]
    ]


class NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAt(
    BaseModel
):
    typename__: Literal["TimingWindowEndAt"] = Field(alias="__typename")
    at_utc: Any = Field(alias="atUtc")


class NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAfter(
    BaseModel
):
    typename__: Literal["TimingWindowEndAfter"] = Field(alias="__typename")
    after: "NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAfterAfter"
    repeat: Optional[
        "NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAfterRepeat"
    ]


class NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAfterAfter(
    BaseModel
):
    seconds: Any


class NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAfterRepeat(
    BaseModel
):
    period: "NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAfterRepeatPeriod"
    times: Optional[Any]


class NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAfterRepeatPeriod(
    BaseModel
):
    seconds: Any


class NewObservationInProgramObservationEditValueTargetEnvironment(BaseModel):
    asterism: List[
        "NewObservationInProgramObservationEditValueTargetEnvironmentAsterism"
    ]
    explicit_base: Optional[
        "NewObservationInProgramObservationEditValueTargetEnvironmentExplicitBase"
    ] = Field(alias="explicitBase")


class NewObservationInProgramObservationEditValueTargetEnvironmentAsterism(BaseModel):
    sidereal: Optional[
        "NewObservationInProgramObservationEditValueTargetEnvironmentAsterismSidereal"
    ]
    nonsidereal: Optional[
        "NewObservationInProgramObservationEditValueTargetEnvironmentAsterismNonsidereal"
    ]
    name: Any


class NewObservationInProgramObservationEditValueTargetEnvironmentAsterismSidereal(
    BaseModel
):
    ra: "NewObservationInProgramObservationEditValueTargetEnvironmentAsterismSiderealRa"
    dec: "NewObservationInProgramObservationEditValueTargetEnvironmentAsterismSiderealDec"
    epoch: Any


class NewObservationInProgramObservationEditValueTargetEnvironmentAsterismSiderealRa(
    BaseModel
):
    hms: Any


class NewObservationInProgramObservationEditValueTargetEnvironmentAsterismSiderealDec(
    BaseModel
):
    dms: Any


class NewObservationInProgramObservationEditValueTargetEnvironmentAsterismNonsidereal(
    BaseModel
):
    des: str


class NewObservationInProgramObservationEditValueTargetEnvironmentExplicitBase(
    BaseModel
):
    ra: "NewObservationInProgramObservationEditValueTargetEnvironmentExplicitBaseRa"
    dec: "NewObservationInProgramObservationEditValueTargetEnvironmentExplicitBaseDec"


class NewObservationInProgramObservationEditValueTargetEnvironmentExplicitBaseRa(
    BaseModel
):
    hms: Any


class NewObservationInProgramObservationEditValueTargetEnvironmentExplicitBaseDec(
    BaseModel
):
    dms: Any


NewObservationInProgram.model_rebuild()
NewObservationInProgramObservationEdit.model_rebuild()
NewObservationInProgramObservationEditValue.model_rebuild()
NewObservationInProgramObservationEditValueObservingMode.model_rebuild()
NewObservationInProgramObservationEditValueObservingModeGmosNorthLongSlit.model_rebuild()
NewObservationInProgramObservationEditValueObservingModeGmosSouthLongSlit.model_rebuild()
NewObservationInProgramObservationEditValueConstraintSet.model_rebuild()
NewObservationInProgramObservationEditValueConstraintSetElevationRange.model_rebuild()
NewObservationInProgramObservationEditValueTimingWindows.model_rebuild()
NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAfter.model_rebuild()
NewObservationInProgramObservationEditValueTimingWindowsEndTimingWindowEndAfterRepeat.model_rebuild()
NewObservationInProgramObservationEditValueTargetEnvironment.model_rebuild()
NewObservationInProgramObservationEditValueTargetEnvironmentAsterism.model_rebuild()
NewObservationInProgramObservationEditValueTargetEnvironmentAsterismSidereal.model_rebuild()
NewObservationInProgramObservationEditValueTargetEnvironmentExplicitBase.model_rebuild()
